<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lytz</groupId>
  <artifactId>finance</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <name>LYTZ Finance Application</name>
   <!--  <url>https://github.com/elulian/CustomerSecurityManagementSystem</url> -->

    <prerequisites>
        <maven>3.0.5</maven>
    </prerequisites>

    <developers>
        <developer>
            <email>luliang1984@gmail.com</email>
            <name>Cloud Lu</name>
            <url>https://github.com/cloudlu</url>
            <id>cloudlu</id>
        </developer>
    </developers>

<properties>
<hibernate.version>4.3.10.Final</hibernate.version>
<hibernate-validator.version>5.0.2.Final</hibernate-validator.version>
<spring.version>4.1.4.RELEASE</spring.version>
<javasimon.version>4.0.1</javasimon.version>
<shiro.version>1.2.3</shiro.version>
<metrics.version>3.1.0</metrics.version>
<log4j2.version>2.3</log4j2.version>
<validation-api.version>1.1.0.Final</validation-api.version>
<servlet-api.version>3.0-alpha-1</servlet-api.version>
        <jsp-api.version>2.2.1-b03</jsp-api.version>
        <jstl.version>1.2</jstl.version>
        <el.version>2.2</el.version>
<hikariCP.version>1.3.8</hikariCP.version>
        <ehcache.version>2.6.10</ehcache.version>
        <hsqldb.version>2.3.2</hsqldb.version>
        <junit.version>4.12</junit.version>
<db.name>lytzfapp</db.name>
        <project.web.deployname>/lytzfapp</project.web.deployname>
        <!-- java common properties -->
        <project.JavaVersion>1.6</project.JavaVersion>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
<hibernate.dialect>org.hibernate.dialect.HSQLDialect</hibernate.dialect>
                <jdbc.groupId>org.hsqldb</jdbc.groupId>
                <jdbc.artifactId>hsqldb</jdbc.artifactId>
                <jdbc.version>${hsqldb.version}</jdbc.version>
                <jdbc.driverClassName>org.hsqldb.jdbcDriver</jdbc.driverClassName>
                <jdbc.url><![CDATA[jdbc:hsqldb:file:D:/cloudlu/workspace/finance/${db.name};shutdown=true]]></jdbc.url>
                <jdbc.username>sa</jdbc.username>
                <jdbc.password/>
                <jdbc.validationQuery><![CDATA[SELECT 1 + 1]]></jdbc.validationQuery>
</properties>

    <!-- <scm>
        <connection>scm:git:https://github.com/elulian/CustomerSecurityManagementSystem.git</connection>
        <developerConnection>scm:git:https://github.com/elulian/CustomerSecurityManagementSystem.git</developerConnection>
        <url>https://github.com/elulian/CustomerSecurityManagementSystem</url>
    </scm> -->
  
  
 <dependencies>
 <!-- log -->
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-api</artifactId>
    <version>${log4j2.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-core</artifactId>
    <version>${log4j2.version}</version>
  </dependency>
  <dependency>
    <groupId>org.apache.logging.log4j</groupId>
    <artifactId>log4j-slf4j-impl</artifactId>
     <version>${log4j2.version}</version>
  </dependency>
  
<!--   <dependency>
    <groupId>javax.validation</groupId>
    <artifactId>validation-api</artifactId>
    <version>${validation-api.version}</version>
</dependency> -->
  
            <!-- <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency> -->
            
            <!-- for source -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikariCP.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
    <groupId>org.hsqldb</groupId>
    <artifactId>hsqldb</artifactId>
    <version>${hsqldb.version}</version>
</dependency>
            <!-- <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglib-nodep.version}</version>
            </dependency> -->
            <dependency>
                <groupId>${jdbc.groupId}</groupId>
                <artifactId>${jdbc.artifactId}</artifactId>
                <version>${jdbc.version}</version>
            </dependency>
            <!-- for hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>${hibernate-validator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-entitymanager</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- Use Javassist as Hibernate's bytecode provider -->
            <!-- <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javassist.version}</version>
            </dependency> -->
            
            <!-- Enable EhCache support -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-ehcache</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <!-- Upgrade version of EhCache used -->
            <dependency>
                <groupId>net.sf.ehcache</groupId>
                <artifactId>ehcache-core</artifactId>
                <version>${ehcache.version}</version>
            </dependency>
            <!-- for hibernate end -->
            <!-- for service -->
            <!-- http://blog.csdn.net/zjh19870703/article/details/7618412 -->
            <!-- Core utilities used by other modules. Define this if you use Spring 
                Utility APIs (org.springframework.core, org.springframework.util) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Expression Language (depends on spring-core) Define this if you use 
                Spring Expression APIs (org.springframework.expression) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-expression</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
                this if you use Spring Bean APIs (org.springframework.beans) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-beans</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
                spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
                spring-beans) This is the central artifact for Spring's Dependency Injection 
                Container and is generally always defined -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Various Application Context utilities, including EhCache, JavaMail, 
                Quartz, and Freemarker integration Define this if you need any of these integrations -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
                spring-aop, spring-context) Define this if you use Spring Transactions or 
                DAO Exception Hierarchy (org.springframework.transaction, org.springframework.dao) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-tx</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
                spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc) 
                <dependency> <groupId>org.springframework</groupId> <artifactId>spring-jdbc</artifactId> 
                <version>${org.springframework.version}</version> </dependency> -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
                JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
                spring-context) Define this if you need OXM (org.springframework.oxm) <dependency> 
                <groupId>org.springframework</groupId> <artifactId>spring-oxm</artifactId> 
                <version>${org.springframework.version}</version> </dependency> -->
            
            <!-- Support for testing Spring applications with tools such as JUnit 
                and TestNG This artifact is generally always defined with a 'test' scope 
                for the integration testing framework and unit testing stubs -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aspects</artifactId>
                <version>${spring.version}</version>
            </dependency>
            
            <!-- for spring end -->
            
            <!-- security -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-web</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-quartz</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>

           <!--  web -->
           <!-- Web application development utilities applicable to both Servlet 
                and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
                Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
                web framework with Spring (org.springframework.web) -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-web</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
                spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
                Container such as Apache Tomcat (org.springframework.web.servlet)  -->
                <dependency> 
                <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> 
                <version>${spring.version}</version> </dependency>
            <!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
                spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
                Container (org.springframework.web.portlet) <dependency> <groupId>org.springframework</groupId> 
                <artifactId>spring-webmvc-portlet</artifactId> <version>${spring.version}</version> 
                </dependency> -->
            <dependency>
                <groupId>jstl</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>${el.version}</version>
            </dependency>
            <!-- <dependency> <groupId>displaytag</groupId> <artifactId>displaytag</artifactId> 
                <version>${displaytag.version}</version> <exclusions> <exclusion> <groupId>org.slf4j</groupId> 
                <artifactId>jcl104-over-slf4j</artifactId> </exclusion> </exclusions> </dependency> -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp-api.version}</version>
                <scope>provided</scope>
            </dependency>
            
            
            <!-- test -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Upgrade junit-dep used by jmock The artifact junit:junit-dep:jar:4.11 
                has been relocated to junit:junit:jar:4.11 <dependency> <groupId>junit</groupId> 
                <artifactId>junit-dep</artifactId> <version>${junitVersion}</version> 
                <scope>test</scope> </dependency> -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- <dependency> <groupId>org.subethamail</groupId> <artifactId>subethasmtp-wiser</artifactId> 
                <version>${wiserVersion}</version> <scope>test</scope> </dependency> -->
            <!-- for sitemesh -->

            <!-- for sitemesh end -->
            
          
        </dependencies>
  
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>de.juplo</groupId>
                    <artifactId>hibernate4-maven-plugin</artifactId>
                    <version>1.1.0</version>
                    <configuration>
					    <url>${jdbc.url}</url>
					    <driver_class>${jdbc.driverClassName}</driver_class>
					    <dialect>${hibernate.dialect}</dialect>
					    <username>${jdbc.username}</username>
					    <password>${jdbc.password}</password>
					  </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>export</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>${jdbc.groupId}</groupId>
                            <artifactId>${jdbc.artifactId}</artifactId>
                            <version>${jdbc.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
  
</project>